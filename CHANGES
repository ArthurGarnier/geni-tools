# Note: keep this file in wiki format for easy pasting to the gcf wiki

gcf 2.0:
 This is a major release. It includes:
 - AM API version 2 is the default. Include the -V option to use AM
 API v1 aggregates (like FOAM)
 - AM API version 3 is supported by all tools
 - Omnispecs are no longer supported in Omni.
 - Added a `--outputfile` option letting you specify the name of the
 file Omni saves results in.
 - Multiple aggregates can be specified on the Omni commandline using
 multiple `-a` options.
 - Lots of code cleanup and bug fixes.

 * omni
  - Make AM API default to version 2, and RSpecs default to GENI 3 (in
 Omni, gcf-am, gcf-test). To talk to an AM API v1 aggregate
 (e.g. FOAM), you must supply an option: `-V1`. 
  AM API v2+ aggregates require that you specify the RSpec format you
 want, when using ListResources. Omni now specifies the RSpec format
 GENI 3 by default: you can always request a different format, if the
 AM supports it.

  - Omni no longer supports the deprecated 'omnispecs' RSpec
    format. Use GENI v3 format RSpecs.
  - Added AM API v3 support
   - Each API method is a separate Omni command
   - `performoperationalaction` has a synonym: `poa`
   - Omni does not parse Ad RSpecs to reason about valid operational
     states or actions
   - CreateSliver and other AM API v1&2 methods work only for AMs
     speaking those versions of the AM API.
   - Added new options `--best-effort`, `--sliver-urn` (`-u`) and `--end-time` to
     support passing geni_best_effort, individual sliver URNs to act on,
     and geni_end_time respectively
   - Support credential structs: Framework classes are responsible for
     tagging credentials with the appropriate type and version. Internally,
     Omni deals with credentials as opaque blobs, except for a few helper
     routines. Credential saving and loading method write to `.xml` or `.json`
     files appropriately, and infer and correct loaded credentials as
     needed.
  - v3 method returns, which are all structs, are saved to `.json`
    files. This means manifest RSpecs (as returned by Describe, Allocate,
    Provision) are one entry in a larger `.json` file. Note that Allocate
    can take a `.json` file as input, and it will extract the request RSpec
    if needed.
  - Omni tries to correct the API version you specify: If you ask for V2
    but are talking to a V3 AM, it tries to reconnect to a V2 URL if the
    AM advertises it.
  - Added a new option `--outputfile`: With `-o`, this means save command results to
    the given file name. Without this, Omni builds its own filename (as
    before). Include `%a` in specified filename and Omni interpolates an AM
    name. `%s` means insert the slice name.
  - `getslicecred` and `getusercred` are more consistent in how the result
    is printed, logged, or saved. These methods now honor `-o`, `-p`, and `--stdout` options.
    `getusercred` honors the `--usercredfile` option.
  - `getversion` output is saved to a `.json` file
  - Allow specifying multiple aggregates on the command line (multiple
    `-a` options). All methods except CreateSliver support this.
  - Added new option `--devmode` (default `False`). When true, only warn on bad
    inputs, but try to pass the bad inputs along anyhow.
  - Added a new GetVersion Cache: the results of GetVersion are
    cached locally as serialed JSON. ListResources an other calls that
    require information from GetVersion may use this cache instead.
    GetVersion does not use the cache by default. Cache entries
    have a max age, after which we always re-query the AM.
  - libstitch example: Allow caller to specify the per-AM fake manifest RSpec to
    use when in fake mode, by using a comment in the request RSpec.
  - omni-configure: Added new `-e` option to specify the experimenter's private
    SSH key. The public SSH key will be named `private_key.pub`
  - readyToLogin: handle multiple users, multiple keys (GCF ticket #117)
  - Omni code has been refactored for maintainability and
    extensability. Calls to clearinghouses are in chhandler.py, and to AM
    API functions are in amhandler.py. In the process, input checking and
    output formatting has been further standardized.
  - AM API v3+ Omni methods all return the full code/value/output struct for use
    by scripts
  - Omni checks v3 return structs, looking for missing slivers, slivers
    reporting errors, and checking sliver expirations.
   - Be more consistent and complete in handling error messages an returns
  - In Omni when using AM API v2, on an error return code, raise an AMAPIError that
    includes the full return struct: this allows scripts to reason about
    the return code. This replaces a special case check for code 7 (Refused)
  - `getversion` returns the full struct (code/value/output) to scripts
  - A couple utility methods can take no slice name, just a slice
    credential filename, and read the slice name/urn from the
    credential. See print_slice_expiration
  - When reading a credential from a file, make sure it matches the
    expected slice.
  - Log clearly when a supplied credential filename was not used,
    and instead omni contacted the clearinghouse (FIXME: Ref ticket)
  - Use json.dumps to produce pretty dict output; this allows
    re-parsing that output in Omni, e.g. in Allocate to get the request
    RSpec
  - Replace old `doNonNative` scripting example (`myscript.py`) with a
    script that reads the AM URL and slice name from a comment in the
    supplied RSpec file. REf ticket!!! FIXME
  - Remove obsolete setup-*.py files. Follow INSTALL.txt to install
    GCF an Omni.
  - Added a utility function that checks for valid URNs by type,
    including checking AM API v3 rules restricting characters in URNs.
  - Updated to latest SFA (from around July 20th, 2012)

 * gcf
  - Make AM API default to version 2, and RSpecs default to GENI 3 (in
    Omni, gcf-am, gcf-test). To talk to an AM API v1 aggregate
    (e.g. FOAM), you must supply an option: `-V1`. 
    AM API v2+ aggregates require that you specify the RSpec format you
    want, when using ListResources. Omni now specifies the RSpec format GENI 3
    by default: you can always request a different format, if the AM
    supports it.
  - Add AM API v3 support, including tracking resource states and
    multiple slivers. Resource actions are geni_start, geni_stop, geni_restart.
  - gcf-test: Add support for API v2 and v3, making v2 the default
    (matching other scripts)
  - Updated to latest SFA (from around July 20th, 2012)
  - Added a GCF AM that proxies connections to other AMs, using a certificate
    retrieved from the new GENI Clearinghouse, plus a test script.
    Added gcf-gch: An XMLRPC interface to the new GENI Clearinghouse
  - Test for non existent certificate and key files, to provide nice
    error feedback

 * AM API acceptance tests
  - Added AM API v3 support. Not all bad-input style tests are implemented yet.

gcf 1.6.2:
 * omni
   - Added omni-configure.py script to autogenerate the omni_config (#127)
   - Log malformed sliverstatus (#128)
   - Better missing file error messages in delegateSliceCred (#129)
   - Update to SFA codebase as of 4/13/12
   - Bug fix: Handle AM down when !ListResources calls !GetVersion and
   gets a null (#131)
   - Implement list my slices for SFA/PlanetLab (#137)
   - Allow listing public keys installed by / known by the CH (#136)
 
 * gcf
   - Allow putting a UUID in experimenter certs (#130)

 * AM API acceptance tests
   - Added --pure-v1 which when used with -V 1 will only test for things required by AM API v1 (and not test for things required by Change Set A).  (#126)
   - Fix a bug in the RSpec schema urls and create a standard place to store these constants (#134)
   - When comparing request and manifest RSpecs, compare `component_id` for bound RSpecs only and compare `client_id` for both bound and unbound RSpecs. (#135)

gcf 1.6.1:
 * AM API v1 acceptance tests
   - request3.xml.sample should point to a node that really exists. (#124)

gcf 1.6:
 * omni
   - Log malformed XML exception correctly (#95)
   - Make getversion AM API v2 implementation be consistent with other commands (#109)
   - Added --arbitrary-option to allow testing whether an AM supports an arbitrary option (#111) 
   - Moved omni_config template to be omni_config.sample and changed instructions to match (#83)
   - Update libstitch to work with V2 AMs in some cases (#119)
   - Updated get_aggregates() call due to changes in SFA (#94)
   - Fix bug in _get_advertised_rspec() (#114)
   - Add --logoutput option and corresponding ability to use %(logfilename)s in log configuration file (#118)
   - readyToLogin.py example script now includes port info if ssh command is not port 22 (#115)
   - Fixed bug where if users attribute is empty in omni_config, then omni exited without a useful error (#116)
   - Improve busy response handling to AM's running AM API v2 and SAs (#123)
 * gcf
   - Moved gcf_config template to be gcf_config.sample and changed instructions to match (#83)
   - Cleaned up TROUBLESHOOTING.txt (#110)
 * AM API v1 acceptance tests
   - Changed sample RSpec files to end in .xml.sample instead of .xml (#83)
   - Added a test that delegated credentials are used properly (#99)
   - Added a test that exercises CreateSliver on an existing sliver (#87)
   - Added AM API v2 support for acceptance tests (#100)
   - Fix bug in schemas passed into rspeclint (#112)
   - Added --monitoring flag to acceptance tests to support their use in cross framework testing (#103)

gcf 1.5.2:
 * omni    
   - validate the API version argument (#92)
 * gcf
 * AM API v1 acceptance tests
   - Exercise !ListResourcs with an untrusted authority (#93)
   - Exercise the !CreateSliver workflow with multiple simultaneous slivers (#84)
   - Exercise Shutdown 	(#86)
   - Exercise !ListResources with broken credentials (#85)
   - Verify that !ListResources(slice) returns a slice manifest RSpec (#88)
   - Verify that !CreateSliver returns a slice manifest RSpec (#88)

gcf 1.5.1:
 * omni
  * Incorporated latest SFA library changes (tag sfa-2.0-4)
  * Complete support of AM API v2 (ticket #69)
    - Default is AM API v1
    - Use -V 2 or --api-version 2 to cause omni to use AM APIv2 to speak to aggregates
   * Added --available to have listresources filter calls to only include available nodes (ticket #74)
   * Added --no-compress to allow the user to specify that AM API call returns should not be compressed (ticket #73)
 * gcf
  * Incorporated latest SFA library changes (tag sfa-2.0-4)
  * Complete support of AM API v2 in reference AM (ticket #68)  
 * AM API v1 acceptance tests
  * Test common options on ListResources (ticket #75)
  * Test CreateSliver workflow on deleted/non-existant slivers (ticket #79)
  * Test CreateSliver with a variety of bad request RSpecs (ticket #76)
  * Test CreateSliver succeeds under normal conditions (ticket #72)
  * Test RenewSliver under normal conditions (#77)
  * Added --sleep-time to adjust the time between AM API calls at the AM

gcf 1.5:
 * omni
  * Removed AM specific URL validation checks; they were confusing. (ticket #66)
  * Incorporated SFA library fixes
  * Updated readyToLogin script to filter out nodes that aren't ready
    and handle if !PlanetLab has no resources
  * Improved check of manifest RSpec returned by CreateSliver
  * Added --usercredfile to allow the user to provide their user credential as a file
  * Implemented preliminary (but incomplete) support of AM API v2
 * gcf
  * Added a reference AM which supports (most of) AM API v2
 * AM API v1 acceptance tests
  * Initial cut at acceptance tests

gcf 1.4:
 * omni
  * Omni logging is configurable with a -l option, or from a script by calling applyLogConfig(). (ticket #61)
  * Omni aborts if it detects your slice has expired (ticket #51)
  * Omni config can define aggregate nicknames, to use instead of a URL in the -a argument. (ticket #62)
  * Solved a thread safety bug in omni - copy options list. (ticket #63)
  * SFA logger handles log file conflicts (ticket #48)
  * Handle expired user certs nicely in Omni (ticket #52)
  * Write output filename when ListResources or GetVersion saves results to a file. (ticket #53)
  * Warn on common AM URL typos. (ticket #54)
  * Pause 10 seconds and retry (max 3x) if server says it is busy, as ProtoGENI often does. (ticket #55)
  * Added stitching script in examples. Uses Omni library to do VLAN stitching between aggregates using tree mode (no negotiation). The script functionality is provided as a library itself, and provides a complex Omni scripting example.
  * SFA library updates (eg slices declare an XML namespace)
  * SFA library bug fixes
  * Fixed a minor bug in examples/readyToLogin for certain ProtoGENI aggregates
  * Incorporated GEC 11 ABAC demonstration code
  * Added a "--no-tz" option for renewing slivers at older SFA-based aggregates. (ticket #65)
 * gcf
  * Fix RenewSlice in gcf-ch.py to honor the requested time. (ticket #60)
  * GCF tools option change: gen-certs, gcf-am, etc now use -c to specify the config file, not -f. -g lets you specify the cert file. (ticket #56)
  * Certificate lifetime is configurable in gen-certs (ticket #57)
  * GCF slices are delegatable by default (library supports specifying this now) (ticket #58)
  * Changed certificate generation (src/gen-certs.py) to properly mark the ch certificate as a CA


gcf 1.3.2:
        - Fixed user-is-a-slice bug (ticket #49)

gcf 1.3.1:
	- SFA library fixes with delegated slice credentials
	- Ensure the root error is reported to the user when there are
	problems.
	- Once the user has failed to enter their passphrase twice,
	exit - don't bury it in later errors. (ticket #43)
	- Clean up timezone handling (ticket #47)
        - examples directory contains simple scripting examples
        - New delegateSliceCred script allowing off-line delegation of
	slice credentials.
        Run src/delegateSliceCred.py -h for usage. (ticket #44)
	- More error message cleanup

gcf 1.3 May, 2011:
	GCF:
	- Fix certificates to be marked V3, instead of erroneously V1
	(ticket #36)
	- Support additional options in the AM's GetVersion
	- Bug fixes

	Omni:
	- Omnispecs are deprecated and native RSpecs are now the default.
	- New --omnispec option (default false). Users should use
	native RSpecs.
	- New -o and -p options controlling saving results in files
	(see getversion, sliverstatus, listResources, getslicecred,
	createsliver) (tickets #39,42)
	- --tostdout says when not saving results to files per -o
	option, write results to STDOUT instead of log stream (for redirecting)
	- New -t option to specify that Ad RSpecs must be of a
	particular type and version. An AM that cannot provide that
	format will not be included in results. (ticket #40)
	- Ticket #41: --slicecredfile specifies the name of a file to
	save/load a slice credential from.
	    createslice -o --slicecredfile <filename>
 	  saves the new slice credential there. AM calls can use the
	  credential. 
          For example: omni.py  --slicecredfile mysavedcred.xml \
	               createsliver myslicename myRSpec.xml
	- New listmyslices command added to see what your framework's
	registry has for you (ticket #38)
	- Refactoring to allow re-use of omni functions as library
	calls (ticket #37)
	- User feedback is clearer
	- Clean up error handling (tickets #25,28,29)
	- Check slice expiration, print for user (ticket #35)
	- New print_slice_expiration omni function
	- New api_test script to test AM API compliance and server availability
	- Add options for temporary Orca compatibility
	- Better config file searching
	- From Ezra Kissel: Enable allocating specific PG nodes from
	omnispecs (ticket #33)
	- Bug fixes

gcf 1.0 September, 2010:
        - RPM library install available, with dependencies
        - Refactored URN, certificate and credential utilities into
	library functions
	- Renamed gam -> gcf-am, gch, client
	- Refactored omni support files to parallel directory
        - gcf_config configures URNs, file locations, etc.
	- geni_aggregates incorporated into gcf_config
	- omni_config is now a Python properties file format
	- omni listresources takes optional AggregateManager URLs to contact
        - Drop CH.Resolve - not used

	- Dropped the CA certificate. The CH certificate is the
       self-signed root. Install only the CH certificate at all
       federated AMs to allow peering.
       - Dropped the -u user certificate argument to the GENI
       Clearinghouse - not needed.
       - Refactored common functionality for manipulating Credentials
       into new src/geni/credential.py
       - Shutdown now requires the shutdown privilege (which proper
       user credentials will have)
       - Omni supports OpenFlow Aggregate Managers and RSpecs (not yet
       the OpenFlow Clearinghouse)
       - More error checking of arguments and more helpful error messages 
       - omni_config now accepts # started comments
       - Comments and documentation
       - 

July, 2010:
	Much more documentation, error checking, logging, and clearer error
	reporting.

	Support credentials from multiple control frameworks / CAs
	without restarting.

	gcf-am and gcf-ch want the -r argument to be a directory of all
	trusted (federated) CA and Clearinghouse certificates, to be
	able to validate and accept certificates from multiple control
	frameworks at once.

	gcf-ch takes a user certificate argument for test purposes
