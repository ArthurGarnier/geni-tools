# This is a sample Omni config file
# It tells Omni how to talk to various Clearinghouses.
# And by extension, which Experimenter credentials to use.

# Omni looks for this file in 3 locations, using the first found
# 1) The location given by the -c command line arg
# 2) The current directory
# 3) ~/.gcf/omni_config

# Any given instance of omni makes calls to a framework 
# (e.g., SFA, ProtoGENI, etc..) to create slices, get slice
# credentials, and to find a list of authorized aggregates.
# This file specifies the control frameworks that you are
# a member of and the users that you want to be able to login
# to your allocated resources (e.g., virtual machines)


[omni]
# The default control framework for omni to use.
# Override on the commandline with -f argument.
# This should be the name of a section that you define below
# Note you could have multiple instances of the same type
# configured, EG for different MyPLC instances.
default_cf = my_gcf

# The slice_users argument in "CreateSliver".  It uploads
# names and public ssh keys to allocated resources for login.
# Details on users should be defined in sections below
# users = Alice, Bob


# Omni will by default contact every Aggregate Manager listed
# by your control framework's registry/clearinghouse.  If you would
# like to provide a specific list of aggregates to contact, do so 
# here in a comma delimited list of of urls.
# e.g., a PL in Princeton AM, a PG in Utah AM, a test GCF AM, and 
#  an OpenFlow/Expedient AM in the GPO lab would be: 
# aggregates = http://www.planet-lab.org:12347/, \
#  https://www.emulab.net/protogeni/xmlrpc/am, \
#  http://myplc2.gpolab.bbn.com:8001/, \
#  https://masada.gpolab.bbn.com:443/openflow/gapi/

# ==================================
# Configure Control Frameworks here

# At least one framework section (sfa/pg/gcf) needs to be filled out
# and pointed to by default_cf


[my_sfa]
# Most of these fields can be found in an SFI configuration
# See: http://svn.planet-lab.org/wiki/SFAConfigurationGuide#ConfiguringSFITools

# The framework type (either sfa, pg, or gcf)
type=sfa

# HRN of your MyPLC or PLC (e.g., plc.princeton) site
# Available in the Issuer CN of your user cert in some form
authority=plc.bbn

# Your planetlab username
user=plc.bbn.jkarlin

# Your PL certificate (obtain by running 'sfi.py gid')
# and copying ~/.sfi/<your username>.gid here
cert=~/.gcf/jkarlin.gid

# Your planetlab private key
key=~/.gcf/id_rsa_planetlab

# URLs of your PL registry and slice manager					
# Be sure these are reachable
registry=http://www.planet-lab.org:12345
slicemgr=http://www.planet-lab.org:12347




[my_gcf]
type=gcf

# Authority part of the control frameworks URN
authority=geni:gpo:gcf

# Where the gcf-ch server is listening
ch=https://localhost:8000

cert=~/.gcf/alice-cert.pem
key=~/.gcf/alice-key.pem



[my_pg]
type=pg
# For debugging
verbose=false
# The address of the PG clearinghouse. Here we use tha main CH in Utah,
# with authority name: emulab.net
ch=https://www.emulab.net:443/protogeni/xmlrpc/ch

# The address of the PG slice authority. Here for comparison we show
# using a different slice authority for the PG authority
# pgeni.gpolab.bbn.com
sa=https://boss.pgeni.gpolab.bbn.com:443/protogeni/xmlrpc/sa

# When you log in to PG you can download your cert and key in 1 file.
# That combined .pem file can be used as both cert and key here.
cert=~/.gcf/encrypted.pem
key=~/.gcf/pgcert.pem


# ===================================
# Define users here.

# Per above, these are the users of the slices, to tell
# aggregates who care who will be logging in and how
# See CreateSliver API call.



[Alice]
# The URN given to Alice by her control framework
# EG run openssl x509 -in [user cert file] -text and 
# look at the Subject Alternative Name URI. 
# Take the bit after "URI:" and before the comma.
urn=urn:publicid:IDN+geni.net:gpo:gcf+user+alice

# The SSH public keys to install for Alice to allow
# Alice to log in to the allocated resource.
# Comma delimited.
keys=~/.gcf/alice.pub, ~/.gcf/alice2.pub


[Bob]
urn=urn:publicid:IDN+plc.bbn+user+bob
keys=~/.gcf/bob.pub
