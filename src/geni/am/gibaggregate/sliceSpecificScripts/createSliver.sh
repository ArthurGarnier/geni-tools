#!/bin/bash 

# This script is auto-generated by the aggregate
#    manager in response to a createSliver call 

## Function definitions
pingNode () {  # pings specified PC to check if it is alive 
    pingAttempts=0 
    echo "Pinging VM 10.0.1.$1..." 
    ping -c2 10.0.1.$1 
    while [ $? -ne 0 ] && [ $pingAttempts -le 50 ] 
    do 
        sleep 10  # sleep for 10 more seconds 
        let "pingAttempts += 1" 
        echo "Pinging VM 10.0.1.$1..." 
        ping -c2 10.0.1.$1 
    done 
    if [ $pingAttempts -gt 20 ] 
    then 
        return 1  # failed to ping PC 
    else 
        return 0  # success 
    fi 
} 

## Delete any existing sliver. 
/home/gibuser/gcf/src/geni/am/gibaggregate/standardScripts/deleteSliver.sh 

## Define containers for each of the hosts in the experiment.
vzctl create 101 --ostemplate fedora-15-x86 --config basic
vzctl create 102 --ostemplate fedora-15-x86 --config basic
vzctl create 103 --ostemplate fedora-15-x86 --config basic
vzctl create 104 --ostemplate fedora-15-x86 --config basic
vzctl create 105 --ostemplate fedora-15-x86 --config basic
vzctl create 106 --ostemplate fedora-15-x86 --config basic

## Set up host names and control network IP addresses for the containers. 
vzctl set 101 --hostname top --save 
vzctl set 101 --ipadd 10.0.1.101 --save
vzctl set 102 --hostname left --save 
vzctl set 102 --ipadd 10.0.1.102 --save
vzctl set 103 --hostname right --save 
vzctl set 103 --ipadd 10.0.1.103 --save
vzctl set 104 --hostname bottom --save 
vzctl set 104 --ipadd 10.0.1.104 --save
vzctl set 105 --hostname hostA --save 
vzctl set 105 --ipadd 10.0.1.105 --save
vzctl set 106 --hostname hostB --save 
vzctl set 106 --ipadd 10.0.1.106 --save

# Turn off firewall on host 
/etc/init.d/iptables stop 

## Set up interfaces on the hosts and connect them to the appropriate bridges 
# Set up interfaces for host top 
vzctl set 101 --netif_add eth1,00:0C:29:D5:B2:C3,veth101.1,FE:FF:FF:FF:FF:FF,br2 --save 
vzctl set 101 --netif_add eth2,00:0C:29:3E:76:6B,veth101.2,FE:FF:FF:FF:FF:FF,br3 --save 
vzctl set 101 --netif_add eth3,00:0C:29:3B:CF:F8,veth101.3,FE:FF:FF:FF:FF:FF,br6 --save 

# Set up interfaces for host left 
vzctl set 102 --netif_add eth1,00:0C:29:C8:76:FD,veth102.1,FE:FF:FF:FF:FF:FF,br2 --save 
vzctl set 102 --netif_add eth2,00:0C:29:B4:DF:A7,veth102.2,FE:FF:FF:FF:FF:FF,br4 --save 

# Set up interfaces for host right 
vzctl set 103 --netif_add eth1,00:0C:29:B8:81:05,veth103.1,FE:FF:FF:FF:FF:FF,br3 --save 
vzctl set 103 --netif_add eth2,00:0C:29:71:BA:ED,veth103.2,FE:FF:FF:FF:FF:FF,br5 --save 

# Set up interfaces for host bottom 
vzctl set 104 --netif_add eth1,00:0C:29:7D:99:5C,veth104.1,FE:FF:FF:FF:FF:FF,br4 --save 
vzctl set 104 --netif_add eth2,00:0C:29:9B:6E:5A,veth104.2,FE:FF:FF:FF:FF:FF,br5 --save 
vzctl set 104 --netif_add eth3,00:0C:29:87:F0:5E,veth104.3,FE:FF:FF:FF:FF:FF,br7 --save 

# Set up interfaces for host hostA 
vzctl set 105 --netif_add eth1,00:0C:29:E8:77:47,veth105.1,FE:FF:FF:FF:FF:FF,br6 --save 

# Set up interfaces for host hostB 
vzctl set 106 --netif_add eth1,00:0C:29:69:1D:AB,veth106.1,FE:FF:FF:FF:FF:FF,br7 --save 


## Start up the hosts (containers) 
vzctl start 101 
vzctl start 102 
vzctl start 103 
vzctl start 104 
vzctl start 105 
vzctl start 106 

## Configure bridges on host 
brctl addbr br2 
brctl addif br2 veth101.1 
brctl addif br2 veth102.1 
ifconfig br2 0 

brctl addbr br3 
brctl addif br3 veth101.2 
brctl addif br3 veth103.1 
ifconfig br3 0 

brctl addbr br4 
brctl addif br4 veth102.2 
brctl addif br4 veth104.1 
ifconfig br4 0 

brctl addbr br5 
brctl addif br5 veth103.2 
brctl addif br5 veth104.2 
ifconfig br5 0 

brctl addbr br6 
brctl addif br6 veth105.1 
brctl addif br6 veth101.3 
ifconfig br6 0 

brctl addbr br7 
brctl addif br7 veth104.3 
brctl addif br7 veth106.1 
ifconfig br7 0 


## Give the hosts 30 seconds to start up 
sleep 30 

# Ping hosts to make sure they are up.  Give them more time if necessary.
pingNode 101 
if [ $? -ne 0 ] 
then 
    echo "Container 101 failed to start up.  Exiting CreateSliver." 
    exit 1 
fi 
pingNode 102 
if [ $? -ne 0 ] 
then 
    echo "Container 102 failed to start up.  Exiting CreateSliver." 
    exit 1 
fi 
pingNode 103 
if [ $? -ne 0 ] 
then 
    echo "Container 103 failed to start up.  Exiting CreateSliver." 
    exit 1 
fi 
pingNode 104 
if [ $? -ne 0 ] 
then 
    echo "Container 104 failed to start up.  Exiting CreateSliver." 
    exit 1 
fi 
pingNode 105 
if [ $? -ne 0 ] 
then 
    echo "Container 105 failed to start up.  Exiting CreateSliver." 
    exit 1 
fi 
pingNode 106 
if [ $? -ne 0 ] 
then 
    echo "Container 106 failed to start up.  Exiting CreateSliver." 
    exit 1 
fi 

## Set up interfaces on each host (container) 
# Set up interfaces on PC top
vzctl exec 101 "/sbin/ifconfig eth1 0" 
vzctl exec 101 "/sbin/ip addr add 10.0.2.101 dev eth1"
vzctl exec 101 "echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter" 
vzctl exec 101 "/sbin/ifconfig eth1 up" 

vzctl exec 101 "/sbin/ifconfig eth2 0" 
vzctl exec 101 "/sbin/ip addr add 10.0.3.101 dev eth2"
vzctl exec 101 "echo 0 > /proc/sys/net/ipv4/conf/eth2/rp_filter" 
vzctl exec 101 "/sbin/ifconfig eth2 up" 

vzctl exec 101 "/sbin/ifconfig eth3 0" 
vzctl exec 101 "/sbin/ip addr add 10.0.6.101 dev eth3"
vzctl exec 101 "echo 0 > /proc/sys/net/ipv4/conf/eth3/rp_filter" 
vzctl exec 101 "/sbin/ifconfig eth3 up" 

# Set up interfaces on PC left
vzctl exec 102 "/sbin/ifconfig eth1 0" 
vzctl exec 102 "/sbin/ip addr add 10.0.2.102 dev eth1"
vzctl exec 102 "echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter" 
vzctl exec 102 "/sbin/ifconfig eth1 up" 

vzctl exec 102 "/sbin/ifconfig eth2 0" 
vzctl exec 102 "/sbin/ip addr add 10.0.4.102 dev eth2"
vzctl exec 102 "echo 0 > /proc/sys/net/ipv4/conf/eth2/rp_filter" 
vzctl exec 102 "/sbin/ifconfig eth2 up" 

# Set up interfaces on PC right
vzctl exec 103 "/sbin/ifconfig eth1 0" 
vzctl exec 103 "/sbin/ip addr add 10.0.3.103 dev eth1"
vzctl exec 103 "echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter" 
vzctl exec 103 "/sbin/ifconfig eth1 up" 

vzctl exec 103 "/sbin/ifconfig eth2 0" 
vzctl exec 103 "/sbin/ip addr add 10.0.5.103 dev eth2"
vzctl exec 103 "echo 0 > /proc/sys/net/ipv4/conf/eth2/rp_filter" 
vzctl exec 103 "/sbin/ifconfig eth2 up" 

# Set up interfaces on PC bottom
vzctl exec 104 "/sbin/ifconfig eth1 0" 
vzctl exec 104 "/sbin/ip addr add 10.0.4.104 dev eth1"
vzctl exec 104 "echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter" 
vzctl exec 104 "/sbin/ifconfig eth1 up" 

vzctl exec 104 "/sbin/ifconfig eth2 0" 
vzctl exec 104 "/sbin/ip addr add 10.0.5.104 dev eth2"
vzctl exec 104 "echo 0 > /proc/sys/net/ipv4/conf/eth2/rp_filter" 
vzctl exec 104 "/sbin/ifconfig eth2 up" 

vzctl exec 104 "/sbin/ifconfig eth3 0" 
vzctl exec 104 "/sbin/ip addr add 10.0.7.104 dev eth3"
vzctl exec 104 "echo 0 > /proc/sys/net/ipv4/conf/eth3/rp_filter" 
vzctl exec 104 "/sbin/ifconfig eth3 up" 

# Set up interfaces on PC hostA
vzctl exec 105 "/sbin/ifconfig eth1 0" 
vzctl exec 105 "/sbin/ip addr add 10.0.6.105 dev eth1"
vzctl exec 105 "echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter" 
vzctl exec 105 "/sbin/ifconfig eth1 up" 

# Set up interfaces on PC hostB
vzctl exec 106 "/sbin/ifconfig eth1 0" 
vzctl exec 106 "/sbin/ip addr add 10.0.7.106 dev eth1"
vzctl exec 106 "echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter" 
vzctl exec 106 "/sbin/ifconfig eth1 up" 


## Set up IP routing tables on each host 
# Set up IP routing table for top
vzctl exec 101 "/sbin/sysctl -w net.ipv4.ip_forward=1" 
vzctl exec 101 "/sbin/ip route add 10.0.2.0/24 dev eth1" 
vzctl exec 101 "/sbin/ip route add 10.0.3.0/24 dev eth2" 
vzctl exec 101 "/sbin/ip route add 10.0.6.0/24 dev eth3" 
vzctl exec 101 "/sbin/ip route add 10.0.4.0/24 via 10.0.2.102" 
vzctl exec 101 "/sbin/ip route add 10.0.5.0/24 via 10.0.3.103" 
vzctl exec 101 "/sbin/ip route add 10.0.7.0/24 via 10.0.2.102" 

# Set up IP routing table for left
vzctl exec 102 "/sbin/sysctl -w net.ipv4.ip_forward=1" 
vzctl exec 102 "/sbin/ip route add 10.0.2.0/24 dev eth1" 
vzctl exec 102 "/sbin/ip route add 10.0.4.0/24 dev eth2" 
vzctl exec 102 "/sbin/ip route add 10.0.3.0/24 via 10.0.2.101" 
vzctl exec 102 "/sbin/ip route add 10.0.5.0/24 via 10.0.4.104" 
vzctl exec 102 "/sbin/ip route add 10.0.6.0/24 via 10.0.2.101" 
vzctl exec 102 "/sbin/ip route add 10.0.7.0/24 via 10.0.4.104" 

# Set up IP routing table for right
vzctl exec 103 "/sbin/sysctl -w net.ipv4.ip_forward=1" 
vzctl exec 103 "/sbin/ip route add 10.0.3.0/24 dev eth1" 
vzctl exec 103 "/sbin/ip route add 10.0.5.0/24 dev eth2" 
vzctl exec 103 "/sbin/ip route add 10.0.2.0/24 via 10.0.3.101" 
vzctl exec 103 "/sbin/ip route add 10.0.4.0/24 via 10.0.5.104" 
vzctl exec 103 "/sbin/ip route add 10.0.6.0/24 via 10.0.3.101" 
vzctl exec 103 "/sbin/ip route add 10.0.7.0/24 via 10.0.5.104" 

# Set up IP routing table for bottom
vzctl exec 104 "/sbin/sysctl -w net.ipv4.ip_forward=1" 
vzctl exec 104 "/sbin/ip route add 10.0.4.0/24 dev eth1" 
vzctl exec 104 "/sbin/ip route add 10.0.5.0/24 dev eth2" 
vzctl exec 104 "/sbin/ip route add 10.0.7.0/24 dev eth3" 
vzctl exec 104 "/sbin/ip route add 10.0.2.0/24 via 10.0.4.102" 
vzctl exec 104 "/sbin/ip route add 10.0.3.0/24 via 10.0.5.103" 
vzctl exec 104 "/sbin/ip route add 10.0.6.0/24 via 10.0.4.102" 

# Set up IP routing table for hostA
vzctl exec 105 "/sbin/sysctl -w net.ipv4.ip_forward=1" 
vzctl exec 105 "/sbin/ip route add 10.0.6.0/24 dev eth1" 
vzctl exec 105 "/sbin/ip route add 10.0.2.0/24 via 10.0.6.101" 
vzctl exec 105 "/sbin/ip route add 10.0.3.0/24 via 10.0.6.101" 
vzctl exec 105 "/sbin/ip route add 10.0.4.0/24 via 10.0.6.101" 
vzctl exec 105 "/sbin/ip route add 10.0.5.0/24 via 10.0.6.101" 
vzctl exec 105 "/sbin/ip route add 10.0.7.0/24 via 10.0.6.101" 

# Set up IP routing table for hostB
vzctl exec 106 "/sbin/sysctl -w net.ipv4.ip_forward=1" 
vzctl exec 106 "/sbin/ip route add 10.0.7.0/24 dev eth1" 
vzctl exec 106 "/sbin/ip route add 10.0.2.0/24 via 10.0.7.104" 
vzctl exec 106 "/sbin/ip route add 10.0.3.0/24 via 10.0.7.104" 
vzctl exec 106 "/sbin/ip route add 10.0.4.0/24 via 10.0.7.104" 
vzctl exec 106 "/sbin/ip route add 10.0.5.0/24 via 10.0.7.104" 
vzctl exec 106 "/sbin/ip route add 10.0.6.0/24 via 10.0.7.104" 


# Turn on forwarding and arp proxing on the virtual eth devices created on the host OS 
ifconfig veth102.2 0 
echo 1 > /proc/sys/net/ipv4/conf/veth102.2/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth102.2/proxy_arp 

ifconfig veth106.1 0 
echo 1 > /proc/sys/net/ipv4/conf/veth106.1/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth106.1/proxy_arp 

ifconfig veth102.1 0 
echo 1 > /proc/sys/net/ipv4/conf/veth102.1/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth102.1/proxy_arp 

ifconfig veth103.2 0 
echo 1 > /proc/sys/net/ipv4/conf/veth103.2/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth103.2/proxy_arp 

ifconfig veth103.1 0 
echo 1 > /proc/sys/net/ipv4/conf/veth103.1/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth103.1/proxy_arp 

ifconfig veth104.2 0 
echo 1 > /proc/sys/net/ipv4/conf/veth104.2/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth104.2/proxy_arp 

ifconfig veth104.3 0 
echo 1 > /proc/sys/net/ipv4/conf/veth104.3/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth104.3/proxy_arp 

ifconfig veth105.1 0 
echo 1 > /proc/sys/net/ipv4/conf/veth105.1/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth105.1/proxy_arp 

ifconfig veth104.1 0 
echo 1 > /proc/sys/net/ipv4/conf/veth104.1/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth104.1/proxy_arp 

ifconfig veth101.3 0 
echo 1 > /proc/sys/net/ipv4/conf/veth101.3/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth101.3/proxy_arp 

ifconfig veth101.2 0 
echo 1 > /proc/sys/net/ipv4/conf/veth101.2/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth101.2/proxy_arp 

ifconfig veth101.1 0 
echo 1 > /proc/sys/net/ipv4/conf/veth101.1/forwarding 
echo 1 > /proc/sys/net/ipv4/conf/veth101.1/proxy_arp 


# Set up DNS on the hosts.  Use Google DNS.
PRIMARYDNS="nameserver 8.8.8.8" 
SECONDARYDNS="nameserver 8.8.4.4" 
vzctl exec 101 "echo order host,bind >> /etc/host.conf" 
vzctl exec 101 "echo $PRIMARYDNS >> /etc/resolv.conf" 
vzctl exec 101 "echo $SECONDARYDNS >> /etc/resolv.conf" 
vzctl exec 102 "echo order host,bind >> /etc/host.conf" 
vzctl exec 102 "echo $PRIMARYDNS >> /etc/resolv.conf" 
vzctl exec 102 "echo $SECONDARYDNS >> /etc/resolv.conf" 
vzctl exec 103 "echo order host,bind >> /etc/host.conf" 
vzctl exec 103 "echo $PRIMARYDNS >> /etc/resolv.conf" 
vzctl exec 103 "echo $SECONDARYDNS >> /etc/resolv.conf" 
vzctl exec 104 "echo order host,bind >> /etc/host.conf" 
vzctl exec 104 "echo $PRIMARYDNS >> /etc/resolv.conf" 
vzctl exec 104 "echo $SECONDARYDNS >> /etc/resolv.conf" 
vzctl exec 105 "echo order host,bind >> /etc/host.conf" 
vzctl exec 105 "echo $PRIMARYDNS >> /etc/resolv.conf" 
vzctl exec 105 "echo $SECONDARYDNS >> /etc/resolv.conf" 
vzctl exec 106 "echo order host,bind >> /etc/host.conf" 
vzctl exec 106 "echo $PRIMARYDNS >> /etc/resolv.conf" 
vzctl exec 106 "echo $SECONDARYDNS >> /etc/resolv.conf" 

# Add host names and IP addresses to /etc/hosts 
vzctl exec 101 "echo 10.0.2.101 top >> /etc/hosts" 
vzctl exec 101 "echo 10.0.2.102 left >> /etc/hosts" 
vzctl exec 101 "echo 10.0.3.103 right >> /etc/hosts" 
vzctl exec 101 "echo 10.0.4.104 bottom >> /etc/hosts" 
vzctl exec 101 "echo 10.0.6.105 hostA >> /etc/hosts" 
vzctl exec 101 "echo 10.0.7.106 hostB >> /etc/hosts" 

vzctl exec 102 "echo 10.0.2.101 top >> /etc/hosts" 
vzctl exec 102 "echo 10.0.2.102 left >> /etc/hosts" 
vzctl exec 102 "echo 10.0.3.103 right >> /etc/hosts" 
vzctl exec 102 "echo 10.0.4.104 bottom >> /etc/hosts" 
vzctl exec 102 "echo 10.0.6.105 hostA >> /etc/hosts" 
vzctl exec 102 "echo 10.0.7.106 hostB >> /etc/hosts" 

vzctl exec 103 "echo 10.0.2.101 top >> /etc/hosts" 
vzctl exec 103 "echo 10.0.2.102 left >> /etc/hosts" 
vzctl exec 103 "echo 10.0.3.103 right >> /etc/hosts" 
vzctl exec 103 "echo 10.0.4.104 bottom >> /etc/hosts" 
vzctl exec 103 "echo 10.0.6.105 hostA >> /etc/hosts" 
vzctl exec 103 "echo 10.0.7.106 hostB >> /etc/hosts" 

vzctl exec 104 "echo 10.0.2.101 top >> /etc/hosts" 
vzctl exec 104 "echo 10.0.2.102 left >> /etc/hosts" 
vzctl exec 104 "echo 10.0.3.103 right >> /etc/hosts" 
vzctl exec 104 "echo 10.0.4.104 bottom >> /etc/hosts" 
vzctl exec 104 "echo 10.0.6.105 hostA >> /etc/hosts" 
vzctl exec 104 "echo 10.0.7.106 hostB >> /etc/hosts" 

vzctl exec 105 "echo 10.0.2.101 top >> /etc/hosts" 
vzctl exec 105 "echo 10.0.2.102 left >> /etc/hosts" 
vzctl exec 105 "echo 10.0.3.103 right >> /etc/hosts" 
vzctl exec 105 "echo 10.0.4.104 bottom >> /etc/hosts" 
vzctl exec 105 "echo 10.0.6.105 hostA >> /etc/hosts" 
vzctl exec 105 "echo 10.0.7.106 hostB >> /etc/hosts" 

vzctl exec 106 "echo 10.0.2.101 top >> /etc/hosts" 
vzctl exec 106 "echo 10.0.2.102 left >> /etc/hosts" 
vzctl exec 106 "echo 10.0.3.103 right >> /etc/hosts" 
vzctl exec 106 "echo 10.0.4.104 bottom >> /etc/hosts" 
vzctl exec 106 "echo 10.0.6.105 hostA >> /etc/hosts" 
vzctl exec 106 "echo 10.0.7.106 hostB >> /etc/hosts" 

# Install experimenter specified software on host top 
# Download file http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz
wget -P /tmp http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz 
if [ $? -eq 0 ] 
then 
    # Download successful 
    mkdir -p /vz/root/101/local 
    tar -C /vz/root/101/local -zxvf /tmp/click-example.tar.gz 
    chmod -R 777 /vz/root/101/local 
    rm /tmp/click-example.tar.gz 
fi 

# Set up experimenter specified startup scripts on host top 
vzctl runscript 101 /vz/root/101//local/click-example/click-example-startup.sh 

# Install experimenter specified software on host left 
# Download file http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz
wget -P /tmp http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz 
if [ $? -eq 0 ] 
then 
    # Download successful 
    mkdir -p /vz/root/102/local 
    tar -C /vz/root/102/local -zxvf /tmp/click-example.tar.gz 
    chmod -R 777 /vz/root/102/local 
    rm /tmp/click-example.tar.gz 
fi 

# Set up experimenter specified startup scripts on host left 
vzctl runscript 102 /vz/root/102//local/click-example/click-example-startup.sh 

# Install experimenter specified software on host right 
# Download file http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz
wget -P /tmp http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz 
if [ $? -eq 0 ] 
then 
    # Download successful 
    mkdir -p /vz/root/103/local 
    tar -C /vz/root/103/local -zxvf /tmp/click-example.tar.gz 
    chmod -R 777 /vz/root/103/local 
    rm /tmp/click-example.tar.gz 
fi 

# Set up experimenter specified startup scripts on host right 
vzctl runscript 103 /vz/root/103//local/click-example/click-example-startup.sh 

# Install experimenter specified software on host bottom 
# Download file http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz
wget -P /tmp http://www.gpolab.bbn.com/experiment-support/ClickExampleExperiment/click-example.tar.gz 
if [ $? -eq 0 ] 
then 
    # Download successful 
    mkdir -p /vz/root/104/local 
    tar -C /vz/root/104/local -zxvf /tmp/click-example.tar.gz 
    chmod -R 777 /vz/root/104/local 
    rm /tmp/click-example.tar.gz 
fi 

# Set up experimenter specified startup scripts on host bottom 
vzctl runscript 104 /vz/root/104//local/click-example/click-example-startup.sh 



